// <auto-generated />
using System;
using IngressoOnline.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IngressoOnline.Migrations
{
    [DbContext(typeof(IngressoOnlineContext))]
    partial class IngressoOnlineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IngressoOnline.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActorId"));

                    b.Property<string>("ActorName")
                        .HasColumnType("text");

                    b.HasKey("ActorId");

                    b.ToTable("actors");
                });

            modelBuilder.Entity("IngressoOnline.Models.ActorMovie", b =>
                {
                    b.Property<int>("ActorMovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActorMovieId"));

                    b.Property<int?>("ActorId")
                        .HasColumnType("integer");

                    b.Property<int?>("Movieid")
                        .HasColumnType("integer");

                    b.HasKey("ActorMovieId");

                    b.HasIndex("ActorId");

                    b.HasIndex("Movieid");

                    b.ToTable("actorMovies");
                });

            modelBuilder.Entity("IngressoOnline.Models.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DirectorId"));

                    b.Property<string>("DirectorName")
                        .HasColumnType("text");

                    b.HasKey("DirectorId");

                    b.ToTable("directors");
                });

            modelBuilder.Entity("IngressoOnline.Models.DirectorMovie", b =>
                {
                    b.Property<int>("DirectorMovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DirectorMovieId"));

                    b.Property<int?>("DirectorId")
                        .HasColumnType("integer");

                    b.Property<int?>("Movieid")
                        .HasColumnType("integer");

                    b.HasKey("DirectorMovieId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("Movieid");

                    b.ToTable("directorMovies");
                });

            modelBuilder.Entity("IngressoOnline.Models.Movie", b =>
                {
                    b.Property<int>("Movieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Movieid"));

                    b.Property<int?>("MovieCategoryId")
                        .HasColumnType("integer");

                    b.Property<int?>("MovieRatingId")
                        .HasColumnType("integer");

                    b.Property<string>("MovieTitle")
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Movieid");

                    b.HasIndex("MovieCategoryId");

                    b.HasIndex("MovieRatingId");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("IngressoOnline.Models.MovieCategory", b =>
                {
                    b.Property<int>("MovieCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MovieCategoryId"));

                    b.Property<string>("MovieCategoryType")
                        .HasColumnType("text");

                    b.HasKey("MovieCategoryId");

                    b.ToTable("movieCategories");
                });

            modelBuilder.Entity("IngressoOnline.Models.MovieRating", b =>
                {
                    b.Property<int>("MovieRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MovieRatingId"));

                    b.Property<string>("MovieRatingClassification")
                        .HasColumnType("text");

                    b.HasKey("MovieRatingId");

                    b.ToTable("movieRatings");
                });

            modelBuilder.Entity("IngressoOnline.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PublisherId"));

                    b.Property<string>("PublisherName")
                        .HasColumnType("text");

                    b.HasKey("PublisherId");

                    b.ToTable("publishers");
                });

            modelBuilder.Entity("IngressoOnline.Models.PublisherMovie", b =>
                {
                    b.Property<int>("PublisherMovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PublisherMovieId"));

                    b.Property<int?>("Movieid")
                        .HasColumnType("integer");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("integer");

                    b.HasKey("PublisherMovieId");

                    b.HasIndex("Movieid");

                    b.HasIndex("PublisherId");

                    b.ToTable("publisherMovies");
                });

            modelBuilder.Entity("IngressoOnline.Models.ActorMovie", b =>
                {
                    b.HasOne("IngressoOnline.Models.Actor", null)
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorId");

                    b.HasOne("IngressoOnline.Models.Movie", null)
                        .WithMany("actorMovies")
                        .HasForeignKey("Movieid");
                });

            modelBuilder.Entity("IngressoOnline.Models.DirectorMovie", b =>
                {
                    b.HasOne("IngressoOnline.Models.Director", null)
                        .WithMany("directorMovies")
                        .HasForeignKey("DirectorId");

                    b.HasOne("IngressoOnline.Models.Movie", null)
                        .WithMany("directorMovies")
                        .HasForeignKey("Movieid");
                });

            modelBuilder.Entity("IngressoOnline.Models.Movie", b =>
                {
                    b.HasOne("IngressoOnline.Models.MovieCategory", "MovieCategory")
                        .WithMany()
                        .HasForeignKey("MovieCategoryId");

                    b.HasOne("IngressoOnline.Models.MovieRating", "MovieRating")
                        .WithMany()
                        .HasForeignKey("MovieRatingId");

                    b.Navigation("MovieCategory");

                    b.Navigation("MovieRating");
                });

            modelBuilder.Entity("IngressoOnline.Models.PublisherMovie", b =>
                {
                    b.HasOne("IngressoOnline.Models.Movie", null)
                        .WithMany("publisherMovies")
                        .HasForeignKey("Movieid");

                    b.HasOne("IngressoOnline.Models.Publisher", null)
                        .WithMany("publisherMovies")
                        .HasForeignKey("PublisherId");
                });

            modelBuilder.Entity("IngressoOnline.Models.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("IngressoOnline.Models.Director", b =>
                {
                    b.Navigation("directorMovies");
                });

            modelBuilder.Entity("IngressoOnline.Models.Movie", b =>
                {
                    b.Navigation("actorMovies");

                    b.Navigation("directorMovies");

                    b.Navigation("publisherMovies");
                });

            modelBuilder.Entity("IngressoOnline.Models.Publisher", b =>
                {
                    b.Navigation("publisherMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
